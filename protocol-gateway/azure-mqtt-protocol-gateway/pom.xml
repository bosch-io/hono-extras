<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2020 Contributors to the Eclipse Foundation
   
    See the NOTICE file(s) distributed with this work for additional
    information regarding copyright ownership.
   
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0
   
    SPDX-License-Identifier: EPL-2.0
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eclipse.hono</groupId>
    <artifactId>azure-protocol-gateway-example</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>Hono Azure IoT Protocol Gateway Example</name>
    <description>A simple protocol gateway for connecting Azure IoT Hub compliant devices via MQTT to Eclipse Hono.
    </description>
    <url>https://www.eclipse.org/hono</url>
    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>Eclipse Foundation</name>
        <url>https://www.eclipse.org/</url>
    </organization>

    <licenses>
        <license>
            <name>Eclipse Public License - Version 2.0</name>
            <url>http://www.eclipse.org/legal/epl-2.0</url>
            <comments>SPDX-License-Identifier: EPL-2.0</comments>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <classifier.spring.boot.artifact>exec</classifier.spring.boot.artifact>

        <!-- configure timestamp format to be injected into legal docs -->
        <maven.build.timestamp.format>yyyy-MM-dd</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>

        <assertj-core.version>3.15.0</assertj-core.version>
        <hono.version>1.3.0-SNAPSHOT</hono.version>
        <hono.mqtt-protocol-gateway.version>0.0.1-SNAPSHOT</hono.mqtt-protocol-gateway.version>
        <junit.jupiter.version>5.6.0</junit.jupiter.version>
        <mockito.version>3.3.3</mockito.version>
        <snakeyaml.version>1.26</snakeyaml.version>
        <spring-boot.version>2.2.7.RELEASE</spring-boot.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-mqtt-protocol-gateway</artifactId>
            <version>${hono.mqtt-protocol-gateway.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-legal</artifactId>
            <version>${hono.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.hono</groupId>
            <artifactId>hono-demo-certs</artifactId>
            <version>${hono.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snakeyaml.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <doclint>all,-accessibility</doclint>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.execution.parallel.enabled = true
                            junit.jupiter.execution.parallel.mode.default = same_thread
                            junit.jupiter.execution.parallel.mode.classes.default = concurrent
                        </configurationParameters>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <!--
                  Copy legal documents from "legal" module to "target/classes" folder
                  so that we make sure to include legal docs in all modules.
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy_legal_docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>hono-legal</includeArtifactIds>
                            <outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
                            <includes>legal/**</includes>
                        </configuration>
                    </execution>
                    <execution>
                        <!--
                          Execution and configuration for copying certificates from related module
                          to "target/classes" folder so that we can include them in the image.
                         -->
                        <id>copy_demo_certs</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>
                                hono-demo-certs
                            </includeArtifactIds>
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                            <includes>
                                *.pem,
                                *.jks,
                                *.p12
                            </includes>
                            <useSubDirectoryPerArtifact>true</useSubDirectoryPerArtifact>
                            <stripClassifier>true</stripClassifier>
                            <stripVersion>true</stripVersion>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.11.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                            <classifier>${classifier.spring.boot.artifact}</classifier>
                            <excludeArtifactIds>hono-legal,hono-demo-certs</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <dependencies>
                    <dependency>
                        <groupId>org.eclipse.hono</groupId>
                        <artifactId>hono-legal</artifactId>
                        <version>${hono.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.32</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle/default.xml</configLocation>
                    <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
